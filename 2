#include <iostream>
#include <string>
using namespace std;
class Transport {
protected:
    string type;
    string fuelType;
    int totalSeats;
public:
    Transport(const string& t, const string& fuel, int seats)
        : type(t), fuelType(fuel), totalSeats(seats) {}

    string getType() const {
        return type;
    }
    void setType(const string& t) {
        type = t;
    }
    string getFuelType() const {
        return fuelType;
    }
    void setFuelType(const string& fuel) {
        fuelType = fuel;
    }
    int getTotalSeats() const {
        return totalSeats;
    }
    void setTotalSeats(int seats) {
        totalSeats = seats;
    }
    virtual void displayInfo() const {
        cout << "Type: " << type << endl;
        cout << "Fuel Type: " << fuelType << endl;
        cout << "Total Seats: " << totalSeats << endl;
    }
};
class Car : public Transport {
public:
    Car(const string& t, const string& fuel, int seats)
        : Transport(t, fuel, seats) {}
    void displayInfo() const override {
        Transport::displayInfo();
        cout << "Car-specific info goes here." << endl;
    }
};
class Ship : public Transport {
public:
    Ship(const string& t, const string& fuel, int seats)
        : Transport(t, fuel, seats) {}

    void displayInfo() const override {
        Transport::displayInfo();
        cout << "Ship-specific info goes here." << endl;
    }
};
class Plane : public Transport {
public:
    Plane(const string& t, const string& fuel, int seats)
        : Transport(t, fuel, seats) {}

    void displayInfo() const override {
        Transport::displayInfo();
        cout << "Plane-specific info goes here." << endl;
    }
};
class Tram : public Transport {
public:
    Tram(const string& t, const string& fuel, int seats)
        : Transport(t, fuel, seats) {}

    void displayInfo() const override {
        Transport::displayInfo();
        cout << "Tram-specific info goes here." << endl;
    }
};
class Motorcycle : public Transport {
public:
    Motorcycle(const string& t, const string& fuel, int seats)
        : Transport(t, fuel, seats) {}

    void displayInfo() const override {
        Transport::displayInfo();
        cout << "Motorcycle-specific info goes here." << endl;
    }
};
int main() {
    Car car("Car", "Gasoline", 4);
    Ship ship("Ship", "Diesel", 100);
    Plane plane("Plane", "Jet Fuel", 200);
    Tram tram("Tram", "Electric", 50);
    Motorcycle motorcycle("Motorcycle", "Gasoline", 2);
    Transport* transports[] = { &car, &ship, &plane, &tram, &motorcycle };
    for (const auto& transport : transports) {
        transport->displayInfo();
        cout << endl;
    }
}
